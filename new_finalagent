import socket
import threading
import time
import random
class Node:
	def __init__(self,node_id,ip,port,initial_value,inputs,dt,steps,neighbours):
		self.node_id=node_id
		self.ip=ip
		self.port=port
		self.neighbours=neighbours
		self.value=initial_value
		self.inputs=inputs
		self.dt=dt
		self.steps=steps
		self.received_values={}
		self.lock=threading.Lock()
	def update_received_value(self,neighbour_id,neighbour_value):
		with self.lock:
			self.received_values[neighbour_id]=neighbour_value
	def update_value(self):
		with self.lock:
			if self.received_values:
				#hhh
				state_derivative=-len(self.received_values)@self.value+sum(self.received_values.values())+self.inputs
				self.value+=state_derivative*self.dt
				self.received_values={}
				
	def start_server(self):
		server_socket=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
		server_socket.bind((self.ip,self.port))
		server_socket.listen()
		while True:
			conn,addr=server_socket.accept()
			threading.Thread(target=self.handle_client,args=(conn,addr)).start()
	def handle_client(self,conn,addr):
		data=conn.recv(1024)
		if data:
			neighbour_id,neighbour_value=data.decode().split(',')
			self.update_received_value(neighbour_id,float(neighbour_value))
			conn.sendall(b"ACK")
		conn.close()
	def run(self):
		for i in range(self.steps):
			threading.Thread(target=self.start_server).start()
			while True:
				for neighbour_ip,neighbour_port in self.neighbours:
					try:
						with socket.socket(socket.AF_INET,socket.SOCK.STREAM) as s:
							s.connect((neighbour_ip,neighbour_port))
							message=f"{self.node_id},{self.value}"
							s.sendall(message.encode())
							data=s.recv(1024)
							#if data==b"ACK":
					except Exception as e:
						print(f"Error communicating with {neighbour_ip}:{neighbour_port}:{neighbour_port}")
						#time.sleep(random.uniform(1,3))
				self.update_value()
				print(f"Node{self.node_id} current_value:{self.value}")
if __name__=="__main__":
	node_id=2
	ip='192.168.240.38'
	port=22
	initial_value=0.5
	inputs=0
	neighbours=[('192.168.240.242',22)]
	dt=0.01
	steps=1000
	node=Node(node_id,ip,port,initial_value,inputs,dt,steps,neighbours)
	node.run()
